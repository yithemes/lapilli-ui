{"version":3,"file":"radio-group-stories-index-stories.7fabb0b7.iframe.bundle.js","mappings":";;;AAkBA;;;;;;;;;AAkDA;;;;;;;;AAUA;;AAIA;;AAGA;;AAIA","sources":["webpack://yith-components-doc/../../packages/components/src/radio-group/RadioGroup.tsx"],"sourcesContent":["import React from 'react';\nimport { noop } from 'lodash';\nimport { styled } from '@yith/styles';\n\nimport Stack from '../stack';\nimport { useControlledState } from '../utils';\nimport type { RadioGroupItemOwnerState, RadioGroupItemStyled, RadioGroupProps } from \"./types\";\n\nconst RadioGroupRoot = styled( Stack, { name: 'RadioGroup', slot: 'Root' } )( ( { theme } ) => ( {\n\tfontSize: theme.fields.fontSize,\n\tlineHeight: 1.5\n} ) );\n\nconst RadioGroupItem = styled( 'label', { name: 'RadioGroup', slot: 'Item' } )`\n\tdisplay: flex;\n\talign-items: baseline;\n`;\n\nconst RadioGroupRadioShape = styled( 'div', { name: 'RadioGroup', slot: 'RadioShape' } )<RadioGroupItemStyled>(\n\t( { ownerState, theme } ) => ( {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\tflex: '0 0 16px',\n\t\tborderRadius: '50%',\n\t\twidth: '16px',\n\t\theight: '16px',\n\t\tborder: `1px solid ${ theme.fields.borderColor }`,\n\t\ttransform: 'translateY( 3px )',\n\t\tmarginRight: '8px',\n\t\tboxSizing: 'border-box',\n\t\t'&:after': {\n\t\t\tcontent: '\"\"',\n\t\t\tposition: 'absolute',\n\t\t\tborderRadius: 'inherit',\n\t\t\tbackground: theme.palette[ ownerState.color ].contrastText,\n\t\t\twidth: ownerState.isChecked ? 6 : 0,\n\t\t\theight: ownerState.isChecked ? 6 : 0,\n\t\t\topacity: ownerState.isChecked ? 1 : 0,\n\t\t\ttransition: 'all .2s ease',\n\t\t},\n\t\t'&:before': {\n\t\t\tcontent: '\"\"',\n\t\t\tposition: 'absolute',\n\t\t\tborderRadius: 'inherit',\n\t\t\tborder: `2px solid ${ theme.palette[ ownerState.color ].main }`,\n\t\t\twidth: 20,\n\t\t\theight: 20,\n\t\t\tboxSizing: 'content-box',\n\t\t\ttransition: 'all .2s ease',\n\t\t\topacity: 0\n\t\t},\n\t\t...( ownerState.isChecked && {\n\t\t\tbackground: theme.palette[ ownerState.color ].main,\n\t\t\tborderColor: '#0000'\n\t\t} )\n\t} )\n);\n\nconst RadioGroupRadio = styled( 'input', { name: 'RadioGroup', slot: 'Radio' } )<RadioGroupItemStyled>`\n\tdisplay: block !important;\n\topacity: 0 !important;\n\tposition: absolute !important;\n\tmargin-top: 5px !important;\n\twidth: 20px !important;\n\theight: 20px !important;\n\n\t&:focus, &:focus-visible {\n\t\t& + ${ RadioGroupRadioShape }:before {\n\t\t\topacity: 1;\n\t\t}\n\t}\n\n\t&[type=\"radio\"]:checked:checked, &[type=\"radio\"]:not(:checked):not(:checked) {\n\t\tdisplay: block !important;\n\t}\n`;\n\nconst RadioGroupRadioContent = styled( 'div', { name: 'RadioGroup', slot: 'RadioContent' } )`\n\tcursor: pointer;\n`;\n\nconst RadioGroupRadioLabel = styled( 'div', { name: 'RadioGroup', slot: 'RadioLabel' } )`\n\tfont-size: inherit;\n`;\nconst RadioGroupRadioDescription = styled( 'div', { name: 'RadioGroup', slot: 'RadioDescription' } )`\n\tfont-size: 0.9em;\n`;\n\nconst RadioGroup = (\n\t{\n\t\toptions = [],\n\t\tvariant = 'radio',\n\t\tvalue: valueProp,\n\t\tcolor: groupColor = 'primary',\n\t\tonChange = noop,\n\t\tspacing,\n\t\tname,\n\t\t...other\n\t}: RadioGroupProps\n) => {\n\tconst [ value, setValue ] = useControlledState( valueProp, options[ 0 ].value ?? '' );\n\n\treturn (\n\t\t<RadioGroupRoot direction='column' spacing={ spacing ?? ( variant !== 'pill' ? 1 : 0 ) } wrap { ...other }>\n\t\t\t{ options.map( option => {\n\t\t\t\tconst { value: optionValue, label, description, color } = option;\n\t\t\t\tconst isChecked = optionValue === value;\n\t\t\t\tconst ownerState: RadioGroupItemOwnerState = { isChecked, color: color ?? groupColor };\n\t\t\t\treturn (\n\t\t\t\t\t<RadioGroupItem key={ optionValue }>\n\t\t\t\t\t\t<RadioGroupRadio\n\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\tname={ name }\n\t\t\t\t\t\t\tchecked={ isChecked }\n\t\t\t\t\t\t\tvalue={ optionValue }\n\t\t\t\t\t\t\tonChange={ ( event: React.ChangeEvent<HTMLInputElement> ) => {\n\t\t\t\t\t\t\t\tsetValue( event.target.value );\n\t\t\t\t\t\t\t\tonChange( event, event.target.value );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\townerState={ ownerState }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<RadioGroupRadioShape ownerState={ ownerState }/>\n\t\t\t\t\t\t<RadioGroupRadioContent>\n\t\t\t\t\t\t\t<RadioGroupRadioLabel>{ label }</RadioGroupRadioLabel>\n\t\t\t\t\t\t\t{ !!description && <RadioGroupRadioDescription>{ description }</RadioGroupRadioDescription> }\n\t\t\t\t\t\t</RadioGroupRadioContent>\n\t\t\t\t\t</RadioGroupItem>\n\t\t\t\t);\n\t\t\t} ) }\n\t\t</RadioGroupRoot>\n\t);\n};\n\nexport default RadioGroup;\n"],"names":[],"sourceRoot":""}