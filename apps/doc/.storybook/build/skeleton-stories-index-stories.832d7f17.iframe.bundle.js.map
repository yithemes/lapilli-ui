{"version":3,"file":"skeleton-stories-index-stories.832d7f17.iframe.bundle.js","mappings":";;;;;;;;;;;;;AA4BA","sources":["webpack://yith-components-doc/../../packages/components/src/skeleton/Skeleton.tsx"],"sourcesContent":["import { alpha, generateComponentClasses, styled, keyframes } from '@yith/styles';\nimport React from 'react';\nimport type { SkeletonOwnerState, SkeletonProps, SkeletonStyled } from \"./types\";\nimport classNames from \"classnames\";\n\nconst useComponentClasses = () => {\n\treturn generateComponentClasses(\n\t\t'Skeleton',\n\t\t{\n\t\t\troot: [ 'root' ]\n\t\t}\n\t)\n}\n\nconst pulseAnimation = keyframes`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`;\n\nconst SkeletonRoot = styled( 'div', { name: 'Skeleton', slot: 'Root' } )<SkeletonStyled>(\n\t( { ownerState, theme } ) => ( {\n\t\tdisplay: 'block',\n\t\tbackgroundColor: alpha( theme.palette.text.primary, theme.mode === 'light' ? 0.11 : 0.13 ),\n\t\theight: ownerState.height,\n\t\twidth: ownerState.width,\n\t\t...( ownerState.variant === 'circular' && {\n\t\t\tborderRadius: '50%',\n\t\t} ),\n\t\t...( ownerState.variant === 'rounded' && {\n\t\t\tborderRadius: theme.shape.borderRadius,\n\t\t} ),\n\t\t...( ownerState.variant === 'text' && {\n\t\t\tmarginTop: 0,\n\t\t\tmarginBottom: 0,\n\t\t\theight: 'auto',\n\t\t\tfontSize: ownerState.fontSize,\n\t\t\tborderRadius: '4px',\n\t\t\t'&:empty:before': {\n\t\t\t\tcontent: '\"\\\\00a0\"',\n\t\t\t},\n\t\t} ),\n\t\t...( ownerState.animation === 'pulse' && {\n\t\t\tanimation: `${ pulseAnimation } 1.5s ease-in-out 0.5s infinite`\n\t\t} )\n\t} )\n);\n\nconst Skeleton = React.forwardRef<HTMLDivElement, SkeletonProps>( function Skeleton(\n\t{\n\t\twidth = 'auto',\n\t\theight = 'auto',\n\t\tfontSize = '1em',\n\t\tvariant = 'text',\n\t\tanimation = 'pulse',\n\t\tclassName,\n\t\t...other\n\t}, ref ) {\n\n\tconst classes = useComponentClasses();\n\n\tconst ownerState: SkeletonOwnerState = { variant, height, width, fontSize, animation };\n\treturn (\n\t\t<SkeletonRoot\n\t\t\t{ ...other }\n\t\t\townerState={ ownerState }\n\t\t\tclassName={ classNames( classes.root, className ) }\n\t\t\tref={ ref }\n\t\t/>\n\t);\n} );\n\nexport default Skeleton;\n"],"names":[],"sourceRoot":""}